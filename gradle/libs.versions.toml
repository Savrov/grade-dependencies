[versions]
java-major = "18"
android-gradle-plugin = "8.1.4"
android-sdk-min = "26"
android-sdk-compile = "34"
ios-deploymentTarget = "17.0"
android-activity-compose = "1.8.2"
android-appcompat = "1.6.1"
android-core = "1.12.0"
arkivanov-mvi = "3.3.0"
arkivanov-decompose = "2.2.2"
arkivanov-decompose-ext-compose = "2.2.2-compose-experimental"
kotlin = "1.9.21"
kotlin-coroutines = "1.8.0-RC2"
kotlin-dateTime = "0.5.0"
kotlin-serialization = "1.6.2"
kotlin-compiler-extension = "1.5.6"
jetbrains-compose = "1.5.11"
koin = "3.5.3"
kotest = "5.7.2"
ktor = "2.3.6"
detekt = "1.23.3"
buildconfig = "5.3.5"
uuid = "0.8.1"
clikt = "3.5.2"
logback = "1.4.11"
mockk = "1.13.8"
savrov-core-library-cleanarch = "1.0.0-SNAPSHOT"
sqldelight = "2.0.0"
supabase = "1.0.0"
oidc = "0.6.5"

[plugins]
android-application = { id = "com.android.application", version.ref = "android-gradle-plugin" }
android-library = { id = "com.android.library", version.ref = "android-gradle-plugin" }

kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-cocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }

jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "jetbrains-compose" }

kotest = { id = "io.kotest.multiplatform", version.ref = "kotest" }

buildConfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildconfig" }

detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }

sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }

[libraries]
android-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "android-activity-compose" }
android-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "android-appcompat" }
android-core = { group = "androidx.core", name = "core-ktx", version.ref = "android-core" }

arkivanov-mvikotlin-core = { module = "com.arkivanov.mvikotlin:mvikotlin", version.ref = "arkivanov-mvi" }
arkivanov-mvikotlin-main = { module = "com.arkivanov.mvikotlin:mvikotlin-main", version.ref = "arkivanov-mvi" }
arkivanov-mvikotlin-logging = { module = "com.arkivanov.mvikotlin:mvikotlin-logging", version.ref = "arkivanov-mvi" }
arkivanov-mvikotlin-timetravel = { module = "com.arkivanov.mvikotlin:mvikotlin-timetravel", version.ref = "arkivanov-mvi" }
arkivanov-mvikotlin-ext-coroutines = { module = "com.arkivanov.mvikotlin:mvikotlin-extensions-coroutines", version.ref = "arkivanov-mvi" }
arkivanov-decompose-core = { module = "com.arkivanov.decompose:decompose", version.ref = "arkivanov-decompose" }
arkivanov-decompose-ext-android = { module = "com.arkivanov.decompose:extensions-android", version.ref = "arkivanov-decompose" }
arkivanov-decompose-ext-compose = { module = "com.arkivanov.decompose:extensions-compose-jetbrains", version.ref = "arkivanov-decompose-ext-compose" }

kotlin-test-jvm = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-common = { module = "org.jetbrains.kotlin:kotlin-test-common", version.ref = "kotlin" }
kotlin-test-annotationsCommon = { module = "org.jetbrains.kotlin:kotlin-test-annotations-common", version.ref = "kotlin" }
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlin-coroutines" }
kotlin-dateTime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlin-dateTime" }
kotlin-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlin-serialization" }

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
koin-ktor = { module = "io.insert-koin:koin-ktor", version.ref = "koin" }
koin-logger = { module = "io.insert-koin:koin-logger-slf4j", version.ref = "koin" }
koin-android-core = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-android-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }

kotest-runner-native = { module = "io.kotest:kotest-framework-engine", version.ref = "kotest" }
kotest-runner-jvm = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }

ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-apache = { module = "io.ktor:ktor-client-apache", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-server-coreJvm = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-cioJvm = { module = "io.ktor:ktor-server-cio-jvm", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-authJwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor" }
ktor-server-contentNegotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-logging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-headers = { module = "io.ktor:ktor-server-default-headers", version.ref = "ktor" }

uuid = { module = "com.benasher44:uuid", version.ref = "uuid" }

clikt = { module = "com.github.ajalt.clikt:clikt", version.ref = "clikt" }

logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }

savrov-core-library-cleanarch = { module = "com.github.savrov.core:library-cleanarch", version.ref = "savrov-core-library-cleanarch" }

sqldelight-android-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-native-driver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-jvm-driver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-coroutines-extensions = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }

supabase-auth = { module = "io.github.jan-tennert.supabase:gotrue-kt", version.ref = "supabase" }
supabase-postgrest = { module = "io.github.jan-tennert.supabase:postgrest-kt", version.ref = "supabase" }
supabase-storage = { module = "io.github.jan-tennert.supabase:storage-kt", version.ref = "supabase" }
supabase-realtime = { module = "io.github.jan-tennert.supabase:realtime-kt", version.ref = "supabase" }
supabase-functions = { module = "io.github.jan-tennert.supabase:functions-kt", version.ref = "supabase" }

oidc = { module = "io.github.kalinjul.kotlin.multiplatform:oidc-appsupport", version.ref = "oidc" }