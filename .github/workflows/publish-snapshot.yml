name: Publish SNAPSHOT versions
on:
  push:
    branches: ['main']
env:
  TOKEN: ${{ secrets.WRITE_DELETE_PACKAGES_TOKEN }}
  ORGANIZATION: ${{ github.repository_owner }}
jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Gradle Build Action
        uses: gradle/gradle-build-action@v2.8.0

      - name: Parse Repository Name
        id: repository_name
        run: |
          NAME="$(echo ${{ github.repository }} | cut -d '/' -f 2)"
          echo "name: $NAME"
          echo "value=$NAME" >> $GITHUB_OUTPUT

      - name: Parse Repository Packages
        id: repository_packages
        run: |
          REPOSITORY=${{ steps.repository_name.outputs.value }}
          # List all packages in the repository using the GitHub API
          RESPONSE=$(curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/orgs/$ORGANIZATION/packages?package_type=maven&visibility=internal"
          )
          # Filter packages based on the repository.name field
               PACKAGES=$(echo "$RESPONSE" | jq -r '.[] | select(.repository.name == "'"$REPOSITORY"'") | .name' | tr '\n' ',')
          # Transform array to comma-separated string
          #          PACKAGES_STR=""
          #          for ITEM in "${PACKAGES[@]}"; do
          #            PACKAGES_STR="$PACKAGES_STR$ITEM,"
          #          done
          #          # PACKAGES_STR="${PACKAGES_STR%$','}"
          # store to output
               echo "packages:$PACKAGES"
               echo "value=$PACKAGES" >> $GITHUB_OUTPUT

      - name: Delete Repository Packages
        run: |
          REPOSITORY=${{ steps.repository_name.outputs.value }}
          PACKAGES=${{ steps.repository_packages.outputs.value }}
          IFS=$',' read -rd '' -a PACKAGES_ARRAY <<< "$PACKAGES"
          echo -e "packages:\n$PACKAGES_ARRAY"
          # Check if there are packages to delete
          if [ -n "${PACKAGES_ARRAY[*]}" ]; then
            echo "Packages to delete: ${PACKAGES_ARRAY[*]}"
            # Loop through and delete each package
            for PACKAGE_NAME in "${PACKAGES_ARRAY[@]}"; do
            echo "Deleting package: $PACKAGE_NAME"
            curl -L \
            -X DELETE \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/orgs/$ORGANIZATION/packages/maven/$PACKAGE_NAME"
            done
          else
            echo "No packages found in the '$REPOSITORY' repository."
          fi

      - name: Publish package
        uses: gradle/gradle-build-action@v2
        with:
          arguments: publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
